#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–æ–≤–æ–π Google Sheets —Ç–∞–±–ª–∏—Ü—ã —Å –ª–∏—Å—Ç–æ–º "–û–±—Ä–∞—â–µ–Ω–∏—è".
"""

import os
import json
from dotenv import load_dotenv
from sheets import _load_service_account, SheetsNotConfiguredError

def analyze_new_spreadsheet():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É —Å –ª–∏—Å—Ç–æ–º '–û–±—Ä–∞—â–µ–Ω–∏—è'."""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º .env
        load_dotenv()
        
        # –í—Ä–µ–º–µ–Ω–Ω–æ –º–µ–Ω—è–µ–º SHEET_ID
        old_sheet_id = os.environ.get('SHEET_ID')
        os.environ['SHEET_ID'] = '15XxSIpD_gMZaSOIrqDVCNI2EqBzphEGiG0ZNJ3HR8hI'
        
        try:
            import gspread
            from google.oauth2.service_account import Credentials
            
            sa_info = _load_service_account()
            scopes = [
                'https://www.googleapis.com/auth/spreadsheets',
                'https://www.googleapis.com/auth/drive'
            ]
            
            creds = Credentials.from_service_account_info(sa_info, scopes=scopes)
            client = gspread.authorize(creds)
            
            sheet_id = os.environ.get('SHEET_ID')
            spreadsheet = client.open_by_key(sheet_id)
            
            print(f"üìä –ê–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã: {spreadsheet.title}")
            print(f"üîó ID —Ç–∞–±–ª–∏—Ü—ã: {spreadsheet.id}")
            print(f"üìã URL: https://docs.google.com/spreadsheets/d/{spreadsheet.id}")
            print("=" * 80)
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ª–∏—Å—Ç—ã
            worksheets = spreadsheet.worksheets()
            print(f"üìÑ –ù–∞–π–¥–µ–Ω–æ –ª–∏—Å—Ç–æ–≤: {len(worksheets)}")
            print()
            
            for i, worksheet in enumerate(worksheets, 1):
                print(f"üìù –õ–∏—Å—Ç {i}: '{worksheet.title}'")
                print(f"   –†–∞–∑–º–µ—Ä: {worksheet.row_count} —Å—Ç—Ä–æ–∫ √ó {worksheet.col_count} –∫–æ–ª–æ–Ω–æ–∫")
                
                try:
                    # –ß–∏—Ç–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞)
                    headers = worksheet.row_values(1)
                    print(f"   –ó–∞–≥–æ–ª–æ–≤–∫–∏ ({len(headers)}): {headers}")
                    
                    # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö
                    if worksheet.row_count > 1:
                        print("   –ü–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö:")
                        for row_num in range(2, min(5, worksheet.row_count + 1)):
                            row_data = worksheet.row_values(row_num)
                            print(f"     –°—Ç—Ä–æ–∫–∞ {row_num}: {row_data}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –∫–æ–ª–æ–Ω–æ–∫
                    key_columns = []
                    for header in headers:
                        header_lower = header.lower()
                        if any(keyword in header_lower for keyword in ['–∫–æ–¥', 'code', '—Ç–µ–ª–µ—Ñ–æ–Ω', 'phone', '—Å—Ç–∞—Ç—É—Å', 'status', 'telegram', '–¥–∞—Ç–∞', 'date', '–æ–±—Ä–∞—â–µ–Ω–∏–µ', 'appeal', '—Å–æ–æ–±—â–µ–Ω–∏–µ', 'message']):
                            key_columns.append(header)
                    
                    if key_columns:
                        print(f"   üîë –ö–ª—é—á–µ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏: {key_columns}")
                    
                except Exception as e:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –ª–∏—Å—Ç–∞: {e}")
                
                print("-" * 60)
            
            # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ª–∏—Å—Ç–∞ "–û–±—Ä–∞—â–µ–Ω–∏—è"
            print("\nüîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ª–∏—Å—Ç–∞ '–û–±—Ä–∞—â–µ–Ω–∏—è':")
            try:
                appeals_sheet = None
                for worksheet in worksheets:
                    if '–æ–±—Ä–∞—â–µ–Ω–∏—è' in worksheet.title.lower() or 'appeals' in worksheet.title.lower():
                        appeals_sheet = worksheet
                        break
                
                if appeals_sheet:
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ª–∏—Å—Ç: '{appeals_sheet.title}'")
                    
                    # –ß–∏—Ç–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
                    all_data = appeals_sheet.get_all_records()
                    print(f"üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {len(all_data)}")
                    
                    if all_data:
                        print("\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö:")
                        for i, record in enumerate(all_data[:3], 1):  # –ü–µ—Ä–≤—ã–µ 3 –∑–∞–ø–∏—Å–∏
                            print(f"   –ó–∞–ø–∏—Å—å {i}:")
                            for key, value in record.items():
                                print(f"     {key}: {value}")
                            print()
                    
                    # –ê–Ω–∞–ª–∏–∑ –∫–æ–ª–æ–Ω–æ–∫
                    if all_data:
                        headers = list(all_data[0].keys())
                        print(f"üìù –í—Å–µ –∫–æ–ª–æ–Ω–∫–∏ ({len(headers)}):")
                        for i, header in enumerate(headers, 1):
                            print(f"   {i:2d}. {header}")
                    
                else:
                    print("‚ùå –õ–∏—Å—Ç '–û–±—Ä–∞—â–µ–Ω–∏—è' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–∏—Å—Ç—ã:")
                    for worksheet in worksheets:
                        print(f"   - {worksheet.title}")
                        
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –ª–∏—Å—Ç–∞ '–û–±—Ä–∞—â–µ–Ω–∏—è': {e}")
                
        finally:
            # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π SHEET_ID
            if old_sheet_id:
                os.environ['SHEET_ID'] = old_sheet_id
            else:
                os.environ.pop('SHEET_ID', None)
                
    except SheetsNotConfiguredError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Google Sheets: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ .env –∑–∞–¥–∞–Ω—ã GCP_SA_JSON –∏–ª–∏ GCP_SA_FILE")
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    analyze_new_spreadsheet()
