"""
Webhook handler –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Ç Google Sheets
"""
import logging
import json
import os
from flask import Flask, request, jsonify
from telegram import Bot, InlineKeyboardButton, InlineKeyboardMarkup
from auth_service import AuthService
from promotions_api import get_active_promotions

logger = logging.getLogger(__name__)

app = Flask(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤
bot_token = os.getenv('TELEGRAM_TOKEN')
admin_telegram_id = int(os.getenv('ADMIN_TELEGRAM_ID', '0'))
web_app_url = os.getenv('WEB_APP_URL', '')

bot = Bot(token=bot_token)
auth_service = AuthService()

@app.route('/webhook/promotions', methods=['POST'])
def handle_promotion_webhook():
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook –æ—Ç Google Sheets –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –∞–∫—Ü–∏–π"""
    try:
        data = request.get_json()
        logger.info(f"–ü–æ–ª—É—á–µ–Ω webhook –æ—Ç Google Sheets: {data}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        secret_key = request.headers.get('X-Webhook-Secret')
        expected_secret = os.getenv('WEBHOOK_SECRET', 'default_secret')
        
        if secret_key != expected_secret:
            logger.warning("–ù–µ–≤–µ—Ä–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á webhook")
            return jsonify({'error': 'Unauthorized'}), 401
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞–∫—Ü–∏–∏
        promotion_data = data.get('promotion', {})
        action = data.get('action', '')
        
        if action == 'publish':
            import asyncio
            asyncio.create_task(send_promotion_notification(promotion_data))
        elif action == 'update':
            import asyncio
            asyncio.create_task(send_promotion_update_notification(promotion_data))
        
        return jsonify({'status': 'success'})
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ webhook handler: {e}")
        return jsonify({'error': 'Internal server error'}), 500

async def send_promotion_notification(promotion_data):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –∞–∫—Ü–∏–∏ –≤—Å–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    try:
        title = promotion_data.get('title', '–ù–æ–≤–∞—è –∞–∫—Ü–∏—è')
        description = promotion_data.get('description', '')
        start_date = promotion_data.get('start_date', '')
        end_date = promotion_data.get('end_date', '')
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        message = f"üéâ **–ù–æ–≤–∞—è –∞–∫—Ü–∏—è!**\n\n"
        message += f"**{title}**\n\n"
        if description:
            message += f"üìù {description}\n\n"
        if start_date and end_date:
            message += f"üìÖ –ü–µ—Ä–∏–æ–¥: {start_date} - {end_date}\n\n"
        message += "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∞–∫—Ü–∏–∏!"
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(
                "üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∞–∫—Ü–∏–∏", 
                web_app={'url': f"{web_app_url}menu.html#promotions"}
            )]
        ])
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        authorized_users = get_authorized_users()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        sent_count = 0
        for user_id in authorized_users:
            try:
                await bot.send_message(
                    chat_id=user_id,
                    text=message,
                    parse_mode='Markdown',
                    reply_markup=keyboard
                )
                sent_count += 1
                logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∞–∫—Ü–∏–∏ '{title}' –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        
        logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∞–∫—Ü–∏–∏ '{title}' –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {sent_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∞–∫—Ü–∏–∏: {e}")

async def send_promotion_update_notification(promotion_data):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–∫—Ü–∏–∏"""
    try:
        title = promotion_data.get('title', '–ê–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞')
        
        message = f"üîÑ **–ê–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞!**\n\n"
        message += f"**{title}**\n\n"
        message += "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫—Ü–∏–∏ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!"
        
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton(
                "üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–∫—Ü–∏–∏", 
                web_app={'url': f"{web_app_url}menu.html#promotions"}
            )]
        ])
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É
        if admin_telegram_id:
            await bot.send_message(
                chat_id=admin_telegram_id,
                text=message,
                parse_mode='Markdown',
                reply_markup=keyboard
            )
            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–∫—Ü–∏–∏ '{title}' –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–∫—Ü–∏–∏: {e}")

def get_authorized_users():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    try:
        records = auth_service.worksheet.get_all_records()
        authorized_users = []
        
        for record in records:
            if (record.get('–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏', '').lower() == '–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' and 
                record.get('Telegram ID')):
                try:
                    telegram_id = int(record.get('Telegram ID'))
                    authorized_users.append(telegram_id)
                except (ValueError, TypeError):
                    continue
        
        logger.info(f"–ù–∞–π–¥–µ–Ω–æ {len(authorized_users)} –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        return authorized_users
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        return []

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=False)
